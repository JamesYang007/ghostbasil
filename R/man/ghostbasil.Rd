% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ghostbasil.R
\name{ghostbasil}
\alias{ghostbasil}
\title{Fits PGR objective with BASIL framework.}
\usage{
ghostbasil(
  A,
  r,
  alpha = 1,
  penalty = rep(1, times = length(r)),
  user.lambdas = c(),
  max.lambdas = 100,
  lambdas.iter = 5,
  use.strong.rule = T,
  delta.strong.size = 500,
  max.strong.size = 10000,
  max.cds = 1e+05,
  thr = 1e-07,
  min.ratio = 1e-06,
  n.threads = 0,
  checkpoint = list()
)
}
\arguments{
\item{A}{data covariance matrix.
It must be one of four types: matrix, GhostMatrix__, BlockMatrix__, BlockGhostMatrix__.
For types of the form xxx__, see the function xxx.}

\item{r}{correlation vector.}

\item{alpha}{elastic net proportion.}

\item{penalty}{penalty factor for each coefficient.}

\item{user.lambdas}{user-specified sequence of lambdas. Will be sorted in decreasing order if not sorted already.}

\item{max.lambdas}{maximum number of lambdas to compute solutions for.
This defines the granularity of the lambda sequence
starting from the maximum lambda
to the smallest lambda, which is the maximum lambda * min.ratio.
Note that the call may terminate early and output solutions for fewer lambdas than max.lambdas.
This can occur, for example, if the algorithm detects that the R^2 isn't changing enough.
The maximum lambda is the largest lambda where solution isn't 0.}

\item{lambdas.iter}{number of lambdas to compute strong set solutions for at each iteration of the BASIL algorithm.
Internally, capped at max.lambdas.
Must be positive.}

\item{use.strong.rule}{uses the strong rule with minimal dependence on fixed incremental rule if TRUE.
Note that delta.strong.size is still used in tandem with strong rule.
It is recommended to keep delta.strong.size small if strong rule is used.}

\item{delta.strong.size}{number of strong set variables to include at every iteration of the BASIL algorithm.
Internally, capped at number of non-strong variables at every iteration of BASIL.
Must be positive.}

\item{max.strong.size}{maximum number of strong set size.
Internally, capped at number of features.
Must be positive.}

\item{max.cds}{maximum number of coordinate descents per BASIL iteration.
Must be positive.}

\item{thr}{coordinate descent convergence threshold.}

\item{min.ratio}{a factor times the maximum lambda value defines the smallest lambda value.
This is only used if user.lambdas is empty.}

\item{n.threads}{number of OpenMP threads for KKT check.
Set it to 0 (default) to disable OpenMP usage.
Set it to -1 to use all available logical cores.
Note that if this value is too high, performance may worsen.
A general rule of thumb is to use the number of physical (not logical) cores.}

\item{checkpoint}{A checkpoint object returned by a previous call to ghostbasil.
It is useful to pass the checkpoint when one would like to continue
fitting down a path of lambdas from the last lambda.}

\item{strong.size}{initial number of strong set variables to include.
Internally, capped at max.strong.size.}
}
\description{
Fits PGR objective with BASIL framework.
}
